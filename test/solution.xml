<?xml version="1.0" encoding="utf-8"?>
<root>
    <solution>
        <rid>1</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
#include <stdio.h>

int main()
{
    int a, b;
    scanf("%d%d", &a, &b);
    printf("%d\n", a + b);
    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>2</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c++</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
#include <iostream>

int main()
{
    int a, b;
    std::cin >> a >> b;
    std::cout << a + b << std::endl;
    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>3</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>java</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
import java.io.*;
import java.util.*;

public class Main
{
    public static void main(String args[])
    {
        int a, b;
        Scanner cin = new Scanner(System.in);

        a = cin.nextInt();
        b = cin.nextInt();
        System.out.println(a + b);
    }
}
]]>
        </code>
    </solution>

    <solution>
        <rid>4</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
a, b = map(int, raw_input().split())
print a + b
]]>
        </code>
    </solution>

    <solution>
        <rid>5</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c</lang>
        <expect>Compile Error(syntax error)</expect>
        <code>
<![CDATA[
#include <stdio.h>

int main()
{
    int a, b;
    scanf("%d%d", &a, &b);
    printf("%d\n", a + b);
    return 0
}   
]]>
        </code>
    </solution>

    <solution>
        <rid>6</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c++</lang>
        <expect>Compile Error(syntax error)</expect>
        <code>
<![CDATA[
#include <iostream>

int main()
{
    int a, b;
    std::cin >> a >> b;
    std::cout << a + b << std::endl;
    return 0
}
]]>
        </code>
    </solution>

    <solution>
        <rid>7</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>java</lang>
        <expect>Compile Error(syntax error)</expect>
        <code>
<![CDATA[
import java.io.*;
import java.util.*;

public class Main
{
    public static void main(String args[])
    {
        int a, b;
        Scanner cin = new Scanner(System.in);

        a = cin.nextInt();
        b = cin.nextInt();
        System.out.println(a + b)
    }
}
]]>
        </code>
    </solution>

    <solution>
        <rid>8</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Compile Error(syntax error)</expect>
        <code>
<![CDATA[
a, b = map(in, raw_input().split())
print a + b
]]>
        </code>
    </solution>

    <solution>
        <rid>9</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
#include <stdio.h>
char s[1000000000];

int main()
{
    int a, b;
    scanf("%d%d", &a, &b);
    printf("%d\n", a + b);
    return 0;
}   
]]>
        </code>
    </solution>

    <solution>
        <rid>10</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c</lang>
        <expect>Wrong Answer</expect>
        <code>
<![CDATA[
#include <stdio.h>

int main()
{
    int a, b;
    scanf("%d%d", &a, &b);
    printf("%d\n", a + b + 1);
    return 0;
}   
]]>
        </code>
    </solution>

    <solution>
        <rid>11</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c</lang>
        <expect>Time Limit Exceeded</expect>
        <code>
<![CDATA[
#include <stdio.h>
#include <unistd.h>

int main()
{
    int a, b;
    scanf("%d%d", &a, &b);
    printf("%d\n", a + b);
    sleep(3);
    return 0;
}   
]]>
        </code>
    </solution>

    <solution>
        <rid>12</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c</lang>
        <expect>Time Limit Exceeded</expect>
        <code>
<![CDATA[
#include <stdio.h>

int main()
{
    int a, b;
    int i, j, k, len = 5000;

    scanf("%d%d", &a, &b);
    printf("%d\n", a + b);

    for (i = 0; i < len; ++i)
        for (j = 0; j < len; ++j)
            for (k = 0; k < len; ++k)
                a = i + j + k;
    return 0;
}   
]]>
        </code>
    </solution>

    <solution>
        <rid>13</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c++</lang>
        <expect>Time Limit Exceeded</expect>
        <code>
<![CDATA[
#include <iostream>

int main()
{
    int a, b;
    int i, j, k, len = 5000;

    std::cin >> a >> b;
    std::cout << a + b << std::endl;

    for (i = 0; i < len; ++i)
        for (j = 0; j < len; ++j)
            for (k = 0; k < len; ++k)
                a = i + j + k;
    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>14</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Time Limit Exceeded</expect>
        <code>
<![CDATA[
a, b = map(int, raw_input().split())
print a + b

len = 5000
for i in xrange(1, len):
    for j in xrange(1, len):
        for k in xrange(1, len):
            a = i + j + k
]]>
        </code>
    </solution>

    <solution>
        <rid>15</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>java</lang>
        <expect>Time Limit Exceeded</expect>
        <code>
<![CDATA[
import java.io.*;
import java.util.*;

public class Main
{
    public static void main(String args[])
    {
        int a, b;
        int i, j, k, len = 50000;
        Scanner cin = new Scanner(System.in);

        a = cin.nextInt();
        b = cin.nextInt();
        System.out.println(a + b);

        for (i = 0; i < len; ++i)
            for (j = 0; j < len; ++j)
                for (k = 0; k < len; ++k)
                    a = (i + k) % (j + 1);
    }
}
]]>
        </code>
    </solution>

    <solution>
        <rid>16</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c</lang>
        <expect>Output Limit Exceeded</expect>
        <code>
<![CDATA[
#include <stdio.h>

int main()
{
    int a, b;
    int i;

    scanf("%d%d", &a, &b);
    printf("%d\n", a + b);
    
    for (i = 0; i < 1024 * 1024; ++i)
        printf("%c", 'a');
    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>17</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c++</lang>
        <expect>Output Limit Exceeded</expect>
        <code>
<![CDATA[
#include <iostream>

int main()
{
    int a, b;
    int i;

    std::cin >> a >> b;
    std::cout << a + b << std::endl;

    for (i = 0; i < 1024 * 1024; ++i)
        std::cout << 'c';
    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>18</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Output Limit Exceeded</expect>
        <code>
<![CDATA[
a, b = map(int, raw_input().split())
print a + b

for i in xrange(1, 1024 * 1024):
    print "c",
]]>
        </code>
    </solution>

    <solution>
        <rid>19</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>java</lang>
        <expect>Output Limit Exceeded</expect>
        <code>
<![CDATA[
import java.io.*;
import java.util.*;

public class Main
{
    public static void main(String args[])
    {
        int a, b;
        int i;
        Scanner cin = new Scanner(System.in);

        a = cin.nextInt();
        b = cin.nextInt();
        System.out.println(a + b);

        char[] out = new char[1024 * 1024];
        for (i = 0; i < 1024 * 1024; ++i)
            out[i] = 'a';
        System.out.print(out);
    }
}
]]>
        </code>
    </solution>

    <solution>
        <rid>20</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c</lang>
        <expect>Memory Limit Exceeded</expect>
        <code>
<![CDATA[
#include <stdio.h>

int main()
{
    int a, b;
    int i, len = 32768 * 1024;

    scanf("%d%d", &a, &b);
    printf("%d\n", a + b);
    
    char * s = (char *)malloc(len);
    for (i = 0; i < len; ++i)
        s[i] = 'c';

    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>21</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">10240</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c++</lang>
        <expect>Memory Limit Exceeded</expect>
        <code>
<![CDATA[
#include <iostream>

int main()
{
    int a, b;
    int i, len = 32768 * 1024;

    std::cin >> a >> b;
    std::cout << a + b << std::endl;
    
    char * s = new char[len];
    for (i = 0; i < len; ++i)
        s[i] = 'c';

    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>22</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">10240</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Memory Limit Exceeded</expect>
        <code>
<![CDATA[
a, b = map(int, raw_input().split())
print a + b

for i in range(1, 32768 * 1024):
    pass
]]>
        </code>
    </solution>

    <solution>
        <rid>23</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>java</lang>
        <expect>Memory Limit Exceeded</expect>
        <code>
<![CDATA[
import java.io.*;
import java.util.*;

public class Main
{
    public static void main(String args[])
    {
        int a, b;
        int i;
        Scanner cin = new Scanner(System.in);

        a = cin.nextInt();
        b = cin.nextInt();
        System.out.println(a + b);

        char[] out = new char[65536 * 1024];
        for (i = 0; i < 65536 * 1024; ++i)
            out[i] = 'a';
    }
}
]]>
        </code>
    </solution>

    <solution>
        <rid>24</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c</lang>
        <expect>Runtime Error</expect>
        <code>
<![CDATA[
#include <stdio.h>

int main()
{
    int a, b;

    scanf("%d%d", &a, &b);
    printf("%d\n", a + b);
    
    b = a / (a - a);
    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>25</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c++</lang>
        <expect>Runtime Error</expect>
        <code>
<![CDATA[
#include <iostream>

int main()
{
    int a, b;

    std::cin >> a >> b;
    std::cout << a + b << std::endl;
    
    b = a / (a + b - a - b);

    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>26</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Runtime Error</expect>
        <code>
<![CDATA[
a, b = map(int, raw_input().split())
print a + b

b = a / (a - a)
]]>
        </code>
    </solution>

    <solution>
        <rid>27</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>java</lang>
        <expect>Runtime Error</expect>
        <code>
<![CDATA[
import java.io.*;
import java.util.*;

public class Main
{
    public static void main(String args[])
    {
        int a, b;
        Scanner cin = new Scanner(System.in);

        a = cin.nextInt();
        b = cin.nextInt();
        System.out.println(a + b);

        b = a / (a - a);
    }
}
]]>
        </code>
    </solution>

    <solution>
        <rid>28</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c</lang>
        <expect>Runtime Error</expect>
        <code>
<![CDATA[
#include <stdio.h>
#include <unistd.h>

int main()
{
    int a, b;

    scanf("%d%d", &a, &b);
    printf("%d\n", a + b);
    
    fork();
    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>29</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c++</lang>
        <expect>Runtime Error</expect>
        <code>
<![CDATA[
#include <iostream>
#include <unistd.h>

int main()
{
    int a, b;

    std::cin >> a >> b;
    std::cout << a + b << std::endl;
    
    fork();
    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>30</rid>
        <pid>1000</pid>
        <desc>base function</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Runtime Error</expect>
        <code>
<![CDATA[
import os
a, b = map(int, raw_input().split())
print a + b

os.fork()
]]>
        </code>
    </solution>

    <solution>
        <rid>31</rid>
        <pid>1001</pid>
        <desc>base function(a + b loop)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
#include <stdio.h>

int main()
{
    int a, b;

    while (scanf("%d%d", &a, &b) != EOF)
        printf("%d\n", a + b);
    
    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>32</rid>
        <pid>1001</pid>
        <desc>base function(a + b loop)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c++</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
#include <iostream>

int main()
{
    int a, b;

    while (std::cin >> a >> b)
        std::cout << a + b << std::endl;
    
    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>33</rid>
        <pid>1001</pid>
        <desc>base function(a + b loop)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
while (1):
    try:
        a, b = map(int, raw_input().split())
        print a + b
    except EOFError:
        break
]]>
        </code>
    </solution>

    <solution>
        <rid>34</rid>
        <pid>1001</pid>
        <desc>base function(a + b loop)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>java</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
import java.io.*;
import java.util.*;

public class Main
{
    public static void main(String args[])
    {
        Scanner cin = new Scanner(System.in);
        int a, b;

        while(cin.hasNextInt())
        {
            a = cin.nextInt();
            b = cin.nextInt();
            System.out.println(a + b);
        }
    }
}
]]>
        </code>
    </solution>

    <solution>
        <rid>35</rid>
        <pid>1001</pid>
        <desc>base function(a + b loop)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c</lang>
        <expect>Presentation Error</expect>
        <code>
<![CDATA[
#include <stdio.h>

int main()
{
    int a, b;

    while (scanf("%d%d", &a, &b) != EOF)
        printf("%d \n", a + b);
    
    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>36</rid>
        <pid>1003</pid>
        <desc>base function(spj: ac less than 0)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
print -1
]]>
        </code>
    </solution>

    <solution>
        <rid>37</rid>
        <pid>1003</pid>
        <desc>base function(spj: ac less than 0)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Wrong Answer</expect>
        <code>
<![CDATA[
print 1
]]>
        </code>
    </solution>

    <solution>
        <rid>38</rid>
        <pid>1004</pid>
        <desc>other test(sort)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
#include <stdio.h>
#include <stdlib.h>

int s[50000];

int cmp(const void * a, const void * b)
{
    return *(int *)a > *(int *)b;
}

int main()
{
    int i, n;

    scanf("%d", &n);
    for (i = 0; i < n; ++i)
        scanf("%d", s + i);

    qsort(s, n, sizeof(int), cmp);
    for (i = 0; i < n; ++i)
        printf("%d ", s[i]);

    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>39</rid>
        <pid>1004</pid>
        <desc>other test(sort)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>c++</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
#include <iostream>
#include <algorithm>

using namespace std;

int s[50000];

int main()
{
    int i, n;

    cin >> n;
    for (i = 0; i < n; ++i)
        cin >> s[i];
    
    sort(s, s + n);
    for (i = 0; i < n; ++i)
        cout << s[i] << " ";

    return 0;
}
]]>
        </code>
    </solution>

    <solution>
        <rid>40</rid>
        <pid>1004</pid>
        <desc>other test(sort)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
n = raw_input()
s = map(int, raw_input().split())
for i in sorted(s):
    print i,
]]>
        </code>
    </solution>

    <solution>
        <rid>41</rid>
        <pid>1004</pid>
        <desc>other test(sort)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>java</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
import java.io.*;
import java.util.*;

public class Main
{
    public static void main(String[] args)
    {
        int a, b, n;
        int[] s = null;

        Scanner cin = new Scanner(System.in);
        n = cin.nextInt();

        s = new int[n];
        for (int i = 0; i < n; ++i)
            s[i] = cin.nextInt();

        Arrays.sort(s);

        for (int i = 0; i < n; ++i)
            System.out.print(s[i] + " ");
    }
}   
]]>
        </code>
    </solution>

    <solution>
        <rid>42</rid>
        <pid>1000</pid>
        <desc>security(write file)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>java</lang>
        <expect>Runtime Error</expect>
        <code>
<![CDATA[
import java.io.*;

public class Main
{
    public static void main(String[] args)
    {
        String str = "hello world\n";
        try {
            FileWriter fw = new FileWriter("hello.txt");
            fw.write(str, 0, str.length());
            fw.flush();
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
]]>
        </code>
    </solution>

    <solution>
        <rid>43</rid>
        <pid>1000</pid>
        <desc>security(add directory)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Runtime Error(invalid syscall 39)</expect>
        <code>
<![CDATA[
import os

a, b = map(int, raw_input().split())
print a + b
os.chdir('/etc/')
os.mkdir('security_test_add_dir')
]]>
        </code>
    </solution>

    <solution>
        <rid>44</rid>
        <pid>1000</pid>
        <desc>security(remove directory)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Runtime Error(invalid syscall 120)</expect>
        <code>
<![CDATA[
import os

a, b = map(int, raw_input().split())
print a + b
os.system('rm -rf /etc/wyuoj/')
]]>
        </code>
    </solution>

    <solution>
        <rid>45</rid>
        <pid>1000</pid>
        <desc>security(remove directory)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Runtime Error(invalid syscall 10)</expect>
        <code>
<![CDATA[
import os

a, b = map(int, raw_input().split())
print a + b
os.unlink('/etc/wyuoj')
]]>
        </code>
    </solution>

    <solution>
        <rid>46</rid>
        <pid>1000</pid>
        <desc>security(write file)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Runtime Error</expect>
        <code>
<![CDATA[
a, b = map(int, raw_input().split())
print a + b
fd = open('/etc/wyuoj/test.txt', 'w')
print >> fd, 'test'
]]>
        </code>
    </solution>

    <solution>
        <rid>47</rid>
        <pid>1000</pid>
        <desc>security(write file to /tmp)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Accepted</expect>
        <code>
<![CDATA[
a, b = map(int, raw_input().split())
print a + b
fd = open('/tmp/test.txt', 'w')
print >> fd, 'test'
]]>
        </code>
    </solution>

    <solution>
        <rid>48</rid>
        <pid>1000</pid>
        <desc>security(read answer data)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Runtime Error</expect>
        <code>
<![CDATA[
fd = open('/home/wyuojer/data/1000/1000.ans', 'r')
print fd.read()
]]>
        </code>
    </solution>

    <solution>
        <rid>49</rid>
        <pid>1000</pid>
        <desc>security(read answer data)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Runtime Error(invalid syscall 37)</expect>
        <code>
<![CDATA[
import os
import signal

for pid in range(1000, 9999):
    os.kill(pid, signal.SIGKILL)
]]>
        </code>
    </solution>

    <solution>
        <rid>50</rid>
        <pid>1000</pid>
        <desc>security(eject cdrom)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>java</lang>
        <expect>Runtime Error</expect>
        <code>
<![CDATA[
import java.io.*;
import java.util.*;

public class Main
{
    public static void main(String[] args)
    {
        int a, b;
        Scanner cin = new Scanner(System.in);
        
        a = cin.nextInt();
        b = cin.nextInt();
        System.out.println(a + b);

        Process p = null;
        try {
            p = Runtime.getRuntime().exec("sh -c eject");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
]]>
        </code>
    </solution>

    <solution>
        <rid>51</rid>
        <pid>1000</pid>
        <desc>security(fork bomb)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Runtime Error(invalid syscall 120)</expect>
        <code>
<![CDATA[
import os

while 1:
    os.fork()
]]>
        </code>
    </solution>

    <solution>
        <rid>52</rid>
        <pid>1000</pid>
        <desc>security(fork bomb)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>java</lang>
        <expect>Runtime Error</expect>
        <code>
<![CDATA[
import java.io.*;
import java.util.*;

public class Main
{
    public static void main(String[] args)
    {
        int a, b;
        Scanner cin = new Scanner(System.in);
        
        a = cin.nextInt();
        b = cin.nextInt();
        System.out.println(a + b);

        Process p = null;
        try {
            p = Runtime.getRuntime().exec("/bin/bash /tmp/fork.sh");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
]]>
        </code>
    </solution>

    <solution>
        <rid>53</rid>
        <pid>1000</pid>
        <desc>security(socket client)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>java</lang>
        <expect>Runtime Error</expect>
        <code>
<![CDATA[
import java.io.*;
import java.util.*;
import java.net.*;

public class Main
{
    public static void main(String[] args)
    {
        int a, b;
        Scanner cin = new Scanner(System.in);
        
        a = cin.nextInt();
        b = cin.nextInt();
        System.out.println(a + b);

        try {
            Socket s2 = new Socket("localhost", 8888);
            s2.close();
        } catch (Throwable e) {
            e.printStackTrace();
        }
    }
}
]]>
        </code>
    </solution>

    <solution>
        <rid>53</rid>
        <pid>1000</pid>
        <desc>security(create socket)</desc>
        <time unit="ms">1000</time>
        <memory unit="kb">32768</memory>
        <outsize unit="kb">1024</outsize>
        <lang>python</lang>
        <expect>Runtime Error(invalid syscall 102</expect>
        <code>
<![CDATA[
import socket
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM, 0)
]]>
        </code>
    </solution>
</root>
